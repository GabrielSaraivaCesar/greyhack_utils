import_code("/Tools/src/srm_lib/params.src")
import_code("/Tools/src/srm_lib/metaxploit.src")
import_code("/Tools/src/srm_lib/computer_explorer.src")
import_code("/Tools/src/srm_lib/file_explorer.src")


handle_help("<b>Usage: "+program_path.split("/")[-1]+" [ip_address or -l] [port or lib] [memory_zone] [unsec_value] [extra_args]</b>", 4)

add_param("ip_address or -l", true, false "Either the IP address of the remote computer or the tag -l to use a local library")
add_param("port or lib", true, false "Either the port to connect to the remote computer or the library file to use locally")
add_param("memory_addr", true, false "The memory address to overflow")
add_param("unsec_value", true, false "The unsecure value to write in the memory address")
add_param("-a", false, false "The extra arguments to pass to the overflow function (optional)")
handle_help()

lib_path = parsed_params_map["port or lib"]

address =  parsed_params_map["ip_address or -l"]
port = null
if address != "-l" then
    port = parsed_params_map["port or lib"].to_int
end if

memory_zone = parsed_params_map.memory_addr
unsec_val = parsed_params_map.unsec_value
extra_args = parsed_params_map["-a"]

metaLib = null

// Start connection
if params.indexOf("-l") == null then
	// Remote use
	net_session = metaxploit.net_use( address, port )
	if not net_session then exit("Error: can't connect to net session")
	metaLib = net_session.dump_lib
else
	// Local use
	metaLib = metaxploit.load(lib_path)
	if metaLib == null then
		metaLib = metaxploit.load(current_path+"/"+lib_path)
	end if
	if metaLib == null then
		metaLib = metaxploit.load("/lib/"+lib_path)
	end if
end if
// Overflow
result = metaLib.overflow(memory_zone, unsec_val, extra_args)

if not result then exit("Program ended")
print("The overflow resulted in ["+typeof(result)+"]")

if typeof(result) == "shell" then
	result.start_terminal // End
else if typeof(result) == "file" then
	file_connection(result)
else if typeof(result) == "computer" then
	computer_connection(result)
else if result != 1 then
	print("Error: expected shell, obtained: " + result)
end if