// lib_scan
// This script scans a computer's library for vulnerabilities.
	
computer = get_shell.host_computer

import_code("/Tools/src/srm_lib/params.src")
import_code("/Tools/src/srm_lib/metaxploit.src")
import_code("/Tools/src/srm_lib/lib_scan/lib_scan_utils.src")

add_param("lib_file", true, false, "The library file to scan")
add_param("-o", false, true, "Generate output file with the scan results")
add_param("-c", false, true, "Use the vulnerability database to check for already known vulnerabilities")
add_param("--cache", false, true, "Use the vulnerability database to check for already known vulnerabilities")
handle_help()

lib_file = params_map.lib_file
should_generate_file = params_map["-o"] == true


// Use metaxploit to overflow a specific memory address
lib = metaxploit.load(current_path + "/" + lib_file)
if not lib then
	lib = metaxploit.load(lib_file)
end if

if params_map["-c"] == true or params_map["--cache"] == true then
	print(get_cached_vuln_data_str(lib))
else
	scan_lib(lib, should_generate_file)
end if
